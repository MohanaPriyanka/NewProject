/**
 * Created by SarahRenfro on 9/25/2019.
 *
 * Tested By: TransferSelectorTest
 */

@SuppressWarnings('PMD.ApexCRUDViolation')
public without sharing class TransferSelector {

    public static List<Transfer__c> getTransfersByMonth(Integer billMonth, Integer billYear) {
        return [
            SELECT Id, Name, Shared_Solar_System__c, Shared_Solar_System__r.Id, Shared_Solar_System__r.Name,
                Shared_Solar_System__r.Billing_Method__c, Allocation_Schedule__c, Attempted_Transfer__c, Bill_Period__c,
                Bill_Period__r.Bill_Date__c, Default_Credit_Value__c, Bills_Generated__c, Attempted_kWh_Transfer__c,
                Total_Transferred__c, Transfer_Amount__c, Transfer_kWh__c, Transfer_Type__c, Date_of_Transfer__c, Bill_Period__r.Name,
                Bill_Period__r.Bill_Status__c, Allocation_Schedule__r.Name, Allocation_Schedule__r.Id,
                Shared_Solar_System__r.UCB__c, Shared_Solar_System__r.Utility__c,
                Shared_Solar_System__r.Utility__r.Transfer_Mismatch_Tolerance__c
            FROM Transfer__c
            WHERE CALENDAR_MONTH(Bill_Period__r.Bill_Date__c) = :billMonth
            AND CALENDAR_YEAR(Bill_Period__r.Bill_Date__c) = :billYear
            AND Transfer_Type__c != 'One-Off'
            AND Transfer_Type__c !='Error'
            ORDER BY Name, Bills_Generated__c
        ];
    }

    public Transfer__c getTransferById(String transferId) {
        List<Transfer__c> transfers = getAllTransfersById(new List<Id>{transferId});
        if (transfers.isEmpty()) {
            return null;
        } else {
            return transfers[0];
        }
    }

    public List<Transfer__c> getAllTransfersById(List<Id> transferIdList) {
        return [
            SELECT Id, Name, Shared_Solar_System__c, Shared_Solar_System__r.Id, Shared_Solar_System__r.Name,
                Shared_Solar_System__r.Billing_Method__c, Allocation_Schedule__c, Attempted_Transfer__c, Bill_Period__c,
                Bill_Period__r.Bill_Date__c, Default_Credit_Value__c, Bills_Generated__c, Attempted_kWh_Transfer__c,
                Total_Transferred__c, Transfer_Amount__c, Transfer_Type__c, Date_of_Transfer__c, Bill_Period__r.Name,
                Bill_Period__r.Bill_Status__c, Allocation_Schedule__r.Name, Allocation_Schedule__r.Id,
                Allocation_Schedule__r.Date_Enacted_by_Utility__c, Shared_Solar_System__r.UCB__c,
                Shared_Solar_System__r.Utility__c, Shared_Solar_System__r.Utility__r.Transfer_Mismatch_Tolerance__c
            FROM Transfer__c
            WHERE Id IN : transferIdList
            AND Transfer_Type__c != 'One-Off'
            AND Transfer_Type__c !='Error'
        ];
    }

    public static List<Transfer__c> getAllTransfersBySSS(List<Id> sssIds){
        return [
            SELECT Id, Name, Shared_Solar_System__c, Shared_Solar_System__r.Id, Shared_Solar_System__r.Name,
                Shared_Solar_System__r.Billing_Method__c, Allocation_Schedule__c, Attempted_Transfer__c, Bill_Period__c,
                Bill_Period__r.Bill_Date__c, Default_Credit_Value__c, Bills_Generated__c, Attempted_kWh_Transfer__c,
                Total_Transferred__c, Transfer_Amount__c, Transfer_Type__c, Date_of_Transfer__c, Bill_Period__r.Name,
                Bill_Period__r.Bill_Status__c, Allocation_Schedule__r.Name, Allocation_Schedule__r.Id,
                Shared_Solar_System__r.UCB__c, Shared_Solar_System__r.Utility__c,
                Shared_Solar_System__r.Utility__r.Transfer_Mismatch_Tolerance__c
            FROM Transfer__c
            WHERE Shared_Solar_System__r.Id IN :sssIds
            AND (Attempted_kWh_Transfer__c != NULL OR Attempted_Transfer__c != NULL)
            AND Transfer_Type__c != 'One-Off'
            AND Transfer_Type__c !='Error'
            ORDER BY Bill_Period__r.Bill_Date__c ASC
        ];

    }

    public static List<Transfer__c> getTransfersForBillPeriods(Set<Id> sssIds) {
        return [
            SELECT Id, Bills_Generated__c, Bill_Period__c, Shared_Solar_System__c, Date_of_Transfer__c
            FROM Transfer__c
            WHERE Shared_Solar_System__c = :sssIds
            AND Bills_Generated__c = FALSE
            AND Bill_Period__c = NULL
        ];
    }

    public static List<Transfer__c> getAllTransfersByBillPeriod(Set<Id> billPeriodIds) {
        return [
            SELECT Id, Name, Shared_Solar_System__c, Allocation_Schedule__c, Attempted_Transfer__c, Bill_Period__c,
                Bill_Period__r.Bill_Date__c, Default_Credit_Value__c, Bills_Generated__c, Attempted_kWh_Transfer__c,
                Total_Transferred__c, Transfer_Amount__c, Transfer_Type__c, Date_of_Transfer__c, Bill_Period__r.Name,
                Bill_Period__r.Bill_Status__c, Allocation_Schedule__r.Id, Allocation_Schedule__r.Name,
                Shared_Solar_System__r.UCB__c, Shared_Solar_System__r.Utility__c,
                Shared_Solar_System__r.Utility__r.Transfer_Mismatch_Tolerance__c
            FROM Transfer__c
            WHERE Bill_Period__c IN : billPeriodIds
            AND Bills_Generated__c = FALSE
            AND Bill_By__c = 'UASB'
            AND Transferred_To__c = 'Customer'
            ORDER BY Date_of_Transfer__c
        ];
    }

    public List<Transfer__c> getUnbilledTransfersBySSS(Set<Id> sssIds) {
        return [
            SELECT Id, Name, Shared_Solar_System__c, Allocation_Schedule__c, Attempted_Transfer__c, Bill_Period__c,
                Bill_Period__r.Bill_Date__c, Default_Credit_Value__c, Bills_Generated__c, Attempted_kWh_Transfer__c,
                Total_Transferred__c, Transfer_Amount__c, Transfer_Type__c, Date_of_Transfer__c, Bill_Period__r.Name,
                Bill_Period__r.Bill_Status__c, Allocation_Schedule__r.Id, Allocation_Schedule__r.Name,
                Shared_Solar_System__r.UCB__c, Shared_Solar_System__r.Utility__c,
                Shared_Solar_System__r.Utility__r.Transfer_Mismatch_Tolerance__c
            FROM Transfer__c
            WHERE Shared_Solar_System__c = :sssIds
            AND Bills_Generated__c = FALSE
            AND Bill_By__c = 'UASB'
            AND Transferred_To__c = 'Customer'
            ORDER BY Date_of_Transfer__c
        ];
    }
}